// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Study.VS2022.Model.Oracle.OraModels
{
    public partial class OraContext : DbContext
    {
        public OraContext()
        {
        }

        public OraContext(DbContextOptions<OraContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TORDER> TORDER { get; set; }
        public virtual DbSet<TUSER> TUSER { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TORDER>(entity =>
            {
                entity.HasKey(e => e.TO_GUID)
                    .HasName("SYS_C0011100");

                entity.Property(e => e.TO_GUID)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TO_PRICE).HasColumnType("NUMBER");
            });

            modelBuilder.Entity<TUSER>(entity =>
            {
                entity.HasKey(e => e.TU_GUID)
                    .HasName("SYS_C0011099");

                entity.Property(e => e.TU_GUID)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TU_ACCOUNT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TU_PASSWORD)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TU_REALNAME)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.HasSequence("LOGMNR_EVOLVE_SEQ$");

            modelBuilder.HasSequence("LOGMNR_SEQ$");

            modelBuilder.HasSequence("LOGMNR_UIDS$");

            modelBuilder.HasSequence("MVIEW$_ADVSEQ_GENERIC");

            modelBuilder.HasSequence("MVIEW$_ADVSEQ_ID");

            modelBuilder.HasSequence("REPCAT_LOG_SEQUENCE");

            modelBuilder.HasSequence("REPCAT$_EXCEPTIONS_S");

            modelBuilder.HasSequence("REPCAT$_FLAVOR_NAME_S");

            modelBuilder.HasSequence("REPCAT$_FLAVORS_S");

            modelBuilder.HasSequence("REPCAT$_REFRESH_TEMPLATES_S");

            modelBuilder.HasSequence("REPCAT$_REPPROP_KEY");

            modelBuilder.HasSequence("REPCAT$_RUNTIME_PARMS_S");

            modelBuilder.HasSequence("REPCAT$_TEMP_OUTPUT_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_OBJECTS_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_PARMS_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_REFGROUPS_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_SITES_S");

            modelBuilder.HasSequence("REPCAT$_USER_AUTHORIZATIONS_S");

            modelBuilder.HasSequence("REPCAT$_USER_PARM_VALUES_S");

            modelBuilder.HasSequence("TEMPLATE$_TARGETS_S");

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}