// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Study.VS2022.Model.Oracle.CaseDemo
{
    public partial class CaseContext : DbContext
    {
        public CaseContext()
        {
        }

        public CaseContext(DbContextOptions<CaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TOrder> TOrder { get; set; }
        public virtual DbSet<TUser> TUser { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseOracle("Data Source=(DESCRIPTION =    (ADDRESS_LIST =      (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))    )    (CONNECT_DATA =      (SERVICE_NAME = orcl)    ));User Id=system;Password=system;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TOrder>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.TO_Guid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TO_Price).HasColumnType("NUMBER");
            });

            modelBuilder.Entity<TUser>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.TU_Account)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.TU_Guid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TU_Password)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.TU_RealName)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.HasSequence("LOGMNR_EVOLVE_SEQ$");

            modelBuilder.HasSequence("LOGMNR_SEQ$");

            modelBuilder.HasSequence("LOGMNR_UIDS$");

            modelBuilder.HasSequence("MVIEW$_ADVSEQ_GENERIC");

            modelBuilder.HasSequence("MVIEW$_ADVSEQ_ID");

            modelBuilder.HasSequence("REPCAT_LOG_SEQUENCE");

            modelBuilder.HasSequence("REPCAT$_EXCEPTIONS_S");

            modelBuilder.HasSequence("REPCAT$_FLAVOR_NAME_S");

            modelBuilder.HasSequence("REPCAT$_FLAVORS_S");

            modelBuilder.HasSequence("REPCAT$_REFRESH_TEMPLATES_S");

            modelBuilder.HasSequence("REPCAT$_REPPROP_KEY");

            modelBuilder.HasSequence("REPCAT$_RUNTIME_PARMS_S");

            modelBuilder.HasSequence("REPCAT$_TEMP_OUTPUT_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_OBJECTS_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_PARMS_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_REFGROUPS_S");

            modelBuilder.HasSequence("REPCAT$_TEMPLATE_SITES_S");

            modelBuilder.HasSequence("REPCAT$_USER_AUTHORIZATIONS_S");

            modelBuilder.HasSequence("REPCAT$_USER_PARM_VALUES_S");

            modelBuilder.HasSequence("TEMPLATE$_TARGETS_S");

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}